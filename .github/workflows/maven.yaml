name: Maven workflow

on:
  workflow_dispatch:
    inputs:
      release_image:
        description: Should a container image be released.
        required: false
        type: boolean
        default: false
      release_package:
        description: Should a maven release be triggered.
        required: false
        type: boolean
        default: false
      version:
        description: Version to be released
        required: false
        type: string
  workflow_call:
    inputs:
      release_image:
        description: Should a container image be released.
        required: false
        type: boolean
        default: false
      release_package:
        description: Should a maven release be triggered.
        required: false
        type: boolean
        default: false
      version:
        description: Version to be released
        required: false
        type: string
    secrets:
      GITLAB_REG_PASSWORD:
        description: Gitlab registry password
        required: false
      GITLAB_REG_USER:
        description: Gitlab registry username
        required: false

env:
  VERSION: ${{ inputs.version }}
  registry: ghcr.io

jobs:
  maven-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Compile
        run: mvn -B -ntp clean compile -DskipTests

      - run: docker-compose -f .test/docker-compose.yml up -d

      - name: Run test
        run: mvn test -B -ntp --fail-at-end

      - name: Upload Surefire Report
        if: ${{ success() || failure() }}
        uses: actions/upload-artifact@v2
        continue-on-error: true
        with:
          name: surefire-reports
          path: "**/target/surefire-reports"
          retention-days: 1

  maven-release-images:
    runs-on: ubuntu-latest
    if: ${{ inputs.release_image }}
    needs: maven-build
    steps:
      # Checkout the repo and pull in version changes.
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Log in to ghcr.io
        uses: docker/login-action@v2
        with:
          registry: ${{ env.registry }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container images
        run: |
          mvn versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false
          mvn -B -ntp package jib:build -Djib.to.tags=${VERSION%.*} -DskipTests -Ddocker.registry=${{ env.registry }}

  maven-release-packages:
    runs-on: ubuntu-latest
    if: ${{ inputs.release_package }}
    needs: maven-build
    steps:
      # Checkout the repo and pull in version changes.
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'
      # We can only push maven packages once, so making sure we are able to push them all.
      - name: Dry-run deploy
        run: |
          mvn versions:set -DnewVersion=${VERSION} -DgenerateBackupPoms=false
          mvn -B -ntp deploy -DuseGitHubPackages=true -DskipTests -Dmaven.deploy.skip=true
      # We allow continuation upon error here temporarily
      # TODO: streamline workflow and then remove the error continuation
      - name: Deploy maven packages to GitHub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true
        run: mvn -B -ntp deploy -DskipTests -DuseGitHubPackages=true

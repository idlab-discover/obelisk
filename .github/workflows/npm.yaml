name: NPM workflow

on:
  workflow_call:
    inputs:
      release:
        description: Should a release be triggered.
        required: false
        type: boolean
        default: false
      version:
        description: Version to be released
        required: false
        type: string
      module:
        description: NPM module to be built
        required: true
        type: string
      base_href:
        description: Base href for the build
        required: true
        type: string
    secrets:
      GITLAB_REG_PASSWORD:
        description: Gitlab registry password
        required: false
      GITLAB_REG_USER:
        description: Gitlab registry username
        required: false
      GITLAB_REGISTRY:
        description: Gitlab registry
        required: false

env:
  VERSION: ${{ inputs.version }}
  registry: ghcr.io

jobs:
  npm-build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.module }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-node@v4
        with:
          node-version: '16'
          # cache: 'npm'
          # cache-dependency-path: ${{ inputs.module }}/package-lock.json
      - name: Install dependencies
        run: npm ci
      - name: Build module
        run: npm run build -- --configuration production --base-href /${{ inputs.base_href }}/
      - name: Upload docker artifacts
        uses: actions/upload-artifact@v2
        if: ${{ inputs.release }}
        with:
          name: ${{ inputs.module }}-docker
          path: ${{ inputs.module }}/docker/
          retention-days: 1

  dockerize:
    if: ${{ inputs.release }}
    runs-on: ubuntu-latest
    needs: npm-build
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Download docker artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.module }}-docker
          path: ${{ inputs.module }}/docker/
      - name: Kaniko build
        uses: aevea/action-kaniko@v0.10.0
        with:
          image: ${{ inputs.module }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN}}
          registry: ${{ env.registry }}
          cache: true
          cache_registry: aevea/cache
          tag: ${{ inputs.version }}
          path: ${{ inputs.module }}/docker/

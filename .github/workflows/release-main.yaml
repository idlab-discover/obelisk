name: Release

on:
  push:
    branches:
      - main

jobs:
  check-release:
    outputs:
      lc: ${{ steps.changelog-lines.outputs.lc }}
      version: ${{ steps.final_version.outputs.version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.OBLX_PAT || secrets.github_token }}
          fetch-depth: 0

      - name: Run bumper
        id: bumper
        uses: tomerfi/version-bumper-action@1.2.2
        with:
          changelog: true

      - id: changelog-lines
        run: |
          echo VERSION=${{ steps.bumper.outputs.new_version }}
          mv changelog-${{ steps.bumper.outputs.new_version }}.md changelog-new.md
          echo "lc=$(wc -l changelog-new.md | cut -d ' ' -f 1)" >> $GITHUB_OUTPUT

      - name: Run bumper
        if: ${{ steps.changelog-lines.outputs.lc > 2 }}
        id: patchbump
        uses: tomerfi/version-bumper-action@1.2.2
        with:
          changelog: true
          bumpoverride: patch

      - if: ${{ steps.changelog-lines.outputs.lc > 2 && !env.ACT }}
        uses: actions/upload-artifact@v3
        with:
          name: changelog
          path: changelog-new.md
          retention-days: 1

      - name: check CalVer bump and output final version (without v prefix)
        if: ${{ steps.changelog-lines.outputs.lc > 2 }}
        env:
          VERSION: ${{ steps.patchbump.outputs.new_version }}
          MAJOR_PART: ${{ steps.patchbump.outputs.major_part }}
          MINOR_PART: ${{ steps.patchbump.outputs.minor_part }}
        id: final_version
        run: |
          CALVER=$(date +%y.%-m)
          if [[ $CALVER != ${MAJOR_PART#v}.${MINOR_PART} ]]; then
            echo "version=$CALVER.0" >> $GITHUB_OUTPUT
          else
            echo "version=${VERSION#v}" >> $GITHUB_OUTPUT
          fi

  maven-release:
    needs: check-release
    if: ${{ needs.check-release.outputs.version }}
    uses: ./.github/workflows/maven.yaml
    with:
      release_image: true
      release_package: true
      version: ${{ needs.check-release.outputs.version }}
    secrets: inherit

  catalog-release:
    needs: check-release
    if: ${{ needs.check-release.outputs.version }}
    uses: ./.github/workflows/npm.yaml
    with:
      module: web-catalog
      base_href: catalog
      release: true
      version: ${{ needs.check-release.outputs.version }}
    secrets: inherit

  apiconsole-release:
    needs: check-release
    if: ${{ needs.check-release.outputs.version }}
    uses: ./.github/workflows/npm.yaml
    with:
      module: web-apiconsole
      base_href: apiconsole
      release: true
      version: ${{ needs.check-release.outputs.version }}
    secrets: inherit

  helm-release:
    needs:
      - maven-release
      - catalog-release
      - apiconsole-release
    if: ${{ needs.check-release.outputs.version }}
    uses: ./.github/workflows/helm.yaml
    with:
      release: true

# When Maven, Helm and Yarn releases are completed, then we can tag the release commit.
  finalize:
    env:
      VERSION: ${{ needs.check-release.outputs.version }}
    runs-on: ubuntu-latest
    needs:
      - helm-release
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.OBLX_PAT || secrets.github_token }}
      - name: Configure committer
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - uses: actions/setup-java@v3.10.0
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Helm
        uses: azure/setup-helm@v3.5
        with:
          version: v3.11.2

      - name: Bump versions
        run: |
          charts/bump-version.sh $VERSION
          charts/update-dependencies.sh
          mvn versions:set -DnewVersion=$VERSION -DgenerateBackupPoms=false

      - uses: actions/download-artifact@v3
        with:
          name: changelog

      - name: Merge changelog and fix formatting
        run: |
          sed -E 's/([\[\.]v)([0-9]+)\.([0-9]+)\.([0-9]+)/\1'"$VERSION"'/gm' -i changelog-new.md
          sed -E 's/### \[/## [/' -i changelog-new.md
          sed -e "4r changelog-new.md" -i CHANGELOG.md
          rm changelog-new.md

      - name: Commit and tag
        run: |
          git tag -a "v$VERSION" -m "Obelisk v$VERSION"
          git push origin --follow-tags
